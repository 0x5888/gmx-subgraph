specVersion: 0.0.2
description: GMX
repository: https://github.com/gkrasulya/gmx-subgraph
schema:
  file: ./schema.graphql
dataSources:
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorBTC
  #   network: arbitrum-one
  #   source:
  #     address: "0x942d00008D658dbB40745BBEc89A93c253f9B882"
  #     abi: ChainlinkAggregator
  #     startBlock: 225000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedBTC
  #     file: ./src/mapping.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorETH
  #   network: arbitrum-one
  #   source:
  #     address: "0x3607e46698d218B3a5Cae44bF381475C0a5e2ca7"
  #     abi: ChainlinkAggregator
  #     startBlock: 225000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedETH
  #     file: ./src/mapping.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorUNI
  #   network: arbitrum-one
  #   source:
  #     address: "0xeFc5061B7a8AeF31F789F1bA5b3b8256674F2B71"
  #     abi: ChainlinkAggregator
  #     startBlock: 225000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedUNI
  #     file: ./src/mapping.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorLINK
  #   network: arbitrum-one
  #   source:
  #     address: "0x9b8DdcF800a7BfCdEbaD6D65514dE59160a2C9CC"
  #     abi: ChainlinkAggregator
  #     startBlock: 225000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedLINK
  #     file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: GlpManager
  #   network: arbitrum-one
  #   source:
  #     address: "0x321F653eED006AD1C29D174e17d96351BDe22649"
  #     abi: GlpManager
  #     startBlock: 225000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - AddLiquidity
  #       - RemoveLiquidity
  #       - HourlyGlpStat
  #     abis:
  #       - name: GlpManager
  #         file: ./abis/GlpManager.json
  #     eventHandlers:
  #       - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleAddLiquidity
  #       - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleRemoveLiquidity
  #     file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: OrderBook
  #   network: arbitrum-one
  #   source:
  #     address: "0x09f77E8A13De9a35a7231028187e9fD5DB8a2ACB"
  #     abi: OrderBook
  #     startBlock: 2329453
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - Order
  #     abis:
  #       - name: OrderBook
  #         file: ./abis/OrderBook.json
  #     eventHandlers:
  #       - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
  #         handler: handleCreateIncreaseOrder
  #       - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
  #         handler: handleCancelIncreaseOrder
  #       - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
  #         handler: handleExecuteIncreaseOrder

  #       - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
  #         handler: handleCreateDecreaseOrder
  #       - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
  #         handler: handleCancelDecreaseOrder
  #       - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
  #         handler: handleExecuteDecreaseOrder

  #       - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
  #         handler: handleCreateSwapOrder
  #       - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
  #         handler: handleCancelSwapOrder
  #       - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
  #         handler: handleExecuteSwapOrder
  #     file: ./src/ordersMapping.ts

  - kind: ethereum/contract
    name: Vault
    network: arbitrum-one
    source:
      address: "0x489ee077994B6658eAfA855C308275EAd8097C4A"
      abi: Vault
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        # - Swap
        # - IncreasePosition
        # - DecreasePosition
        # - HourlyVolume
        # - HourlyVolumeBySource
        # - HourlyVolumeByToken
        # - HourlyFee
        # - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        # - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
        #   handler: handleSwap
        # - event: CollectMarginFees(address,uint256,uint256)
        #   handler: handleCollectMarginFees
        # - event: BuyUSDG(address,address,uint256,uint256,uint256)
        #   handler: handleBuyUSDG
        # - event: SellUSDG(address,address,uint256,uint256,uint256)
        #   handler: handleSellUSDG
        # - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
        #   handler: handleIncreasePosition
        # - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
        #   handler: handleDecreasePosition
        # - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
        #   handler: handleLiquidatePosition
      file: ./src/mapping.ts
